{"ast":null,"code":"import React from'react';import{createRoot}from'react-dom/client';import'./index.css';import App from'./App';import{jsx as _jsx}from\"react/jsx-runtime\";const container=document.getElementById('root');const root=createRoot(container);root.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(App,{})}));// Add error handling\nwindow.addEventListener('error',event=>{console.error('Global error:',event.error);});window.addEventListener('unhandledrejection',event=>{console.error('Unhandled promise rejection:',event.reason);});","map":{"version":3,"names":["React","createRoot","App","jsx","_jsx","container","document","getElementById","root","render","StrictMode","children","window","addEventListener","event","console","error","reason"],"sources":["C:/Users/marti/Documents/programacion/pokeapi/src/index.js"],"sourcesContent":["import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// Add error handling\nwindow.addEventListener('error', (event) => {\n  console.error('Global error:', event.error);\n});\n\nwindow.addEventListener('unhandledrejection', (event) => {\n  console.error('Unhandled promise rejection:', event.reason);\n});\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,UAAU,KAAQ,kBAAkB,CAC7C,MAAO,aAAa,CACpB,MAAO,CAAAC,GAAG,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAExB,KAAM,CAAAC,SAAS,CAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CACjD,KAAM,CAAAC,IAAI,CAAGP,UAAU,CAACI,SAAS,CAAC,CAClCG,IAAI,CAACC,MAAM,cACTL,IAAA,CAACJ,KAAK,CAACU,UAAU,EAAAC,QAAA,cACfP,IAAA,CAACF,GAAG,GAAE,CAAC,CACS,CACpB,CAAC,CAED;AACAU,MAAM,CAACC,gBAAgB,CAAC,OAAO,CAAGC,KAAK,EAAK,CAC1CC,OAAO,CAACC,KAAK,CAAC,eAAe,CAAEF,KAAK,CAACE,KAAK,CAAC,CAC7C,CAAC,CAAC,CAEFJ,MAAM,CAACC,gBAAgB,CAAC,oBAAoB,CAAGC,KAAK,EAAK,CACvDC,OAAO,CAACC,KAAK,CAAC,8BAA8B,CAAEF,KAAK,CAACG,MAAM,CAAC,CAC7D,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}