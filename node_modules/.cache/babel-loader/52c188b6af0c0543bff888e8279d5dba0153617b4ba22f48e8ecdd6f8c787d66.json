{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marti\\\\Documents\\\\programacion\\\\pokeapi\\\\src\\\\components\\\\Pokedex.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PokedexContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: 'Roboto', sans-serif;\n`;\n_c = PokedexContainer;\nconst SearchBar = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 20px;\n  input {\n    padding: 10px;\n    border-radius: 20px;\n    border: 2px solid #e0e0e0;\n    width: 300px;\n    font-size: 16px;\n    &:focus {\n      outline: none;\n      border-color: #3f51b5;\n    }\n  }\n  button {\n    padding: 10px 20px;\n    border-radius: 20px;\n    border: none;\n    background: #3f51b5;\n    color: white;\n    cursor: pointer;\n    &:hover {\n      background: #303f9f;\n    }\n  }\n`;\n_c2 = SearchBar;\nconst PokemonCard = styled.div`\n  background: white;\n  border-radius: 20px;\n  padding: 30px;\n  box-shadow: 0 4px 20px rgba(0,0,0,0.1);\n`;\n_c3 = PokemonCard;\nconst TypeBadge = styled.span`\n  padding: 5px 15px;\n  border-radius: 15px;\n  margin: 0 5px;\n  color: white;\n  font-weight: bold;\n  text-transform: capitalize;\n  background-color: ${props => getTypeColor(props.type)};\n`;\n_c4 = TypeBadge;\nconst StatBar = styled.div`\n  width: 100%;\n  height: 20px;\n  background: #f0f0f0;\n  border-radius: 10px;\n  overflow: hidden;\n  margin: 5px 0;\n  .stat-fill {\n    height: 100%;\n    background: #3f51b5;\n    width: ${props => props.value / 255 * 100}%;\n    transition: width 0.3s ease;\n  }\n`;\n\n// Add this function to get colors for different Pokemon types\n_c5 = StatBar;\nfunction getTypeColor(type) {\n  const colors = {\n    normal: '#A8A878',\n    fire: '#F08030',\n    water: '#6890F0',\n    electric: '#F8D030',\n    grass: '#78C850',\n    ice: '#98D8D8',\n    fighting: '#C03028',\n    poison: '#A040A0',\n    ground: '#E0C068',\n    flying: '#A890F0',\n    psychic: '#F85888',\n    bug: '#A8B820',\n    rock: '#B8A038',\n    ghost: '#705898',\n    dragon: '#7038F8',\n    dark: '#705848',\n    steel: '#B8B8D0',\n    fairy: '#EE99AC'\n  };\n  return colors[type] || '#777';\n}\n\n// Add these new styled components after your existing ones\nconst MovesSection = styled.div`\n  margin-top: 20px;\n`;\n_c6 = MovesSection;\nconst GenerationSelect = styled.select`\n  padding: 8px;\n  border-radius: 10px;\n  border: 2px solid #e0e0e0;\n  margin-bottom: 15px;\n  cursor: pointer;\n  &:focus {\n    outline: none;\n    border-color: #3f51b5;\n  }\n`;\n_c7 = GenerationSelect;\nconst MovesList = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 10px;\n`;\n_c8 = MovesList;\nconst MoveCard = styled.div`\n  background: #f5f5f5;\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n`;\n_c9 = MoveCard;\nconst Pokedex = () => {\n  _s();\n  const [pokemon, setPokemon] = useState(null);\n  const [search, setSearch] = useState('');\n  const [error, setError] = useState('');\n  const [selectedGeneration, setSelectedGeneration] = useState('1');\n\n  // Add this after your existing searchPokemon function\n  const getGenerationMoves = (moves, generation) => {\n    return moves.filter(move => {\n      const versionGroup = move.version_group_details.find(detail => {\n        switch (generation) {\n          case '1':\n            return detail.version_group.name === 'red-blue';\n          case '2':\n            return detail.version_group.name === 'gold-silver';\n          case '3':\n            return detail.version_group.name === 'ruby-sapphire';\n          case '4':\n            return detail.version_group.name === 'diamond-pearl';\n          case '5':\n            return detail.version_group.name === 'black-white';\n          case '6':\n            return detail.version_group.name === 'x-y';\n          case '7':\n            return detail.version_group.name === 'sun-moon';\n          case '8':\n            return detail.version_group.name === 'sword-shield';\n          default:\n            return false;\n        }\n      });\n      return versionGroup !== undefined;\n    }).map(move => {\n      var _move$version_group_d, _move$version_group_d2;\n      return {\n        name: move.move.name,\n        level: ((_move$version_group_d = move.version_group_details[0]) === null || _move$version_group_d === void 0 ? void 0 : _move$version_group_d.level_learned_at) || 1,\n        method: (_move$version_group_d2 = move.version_group_details[0]) === null || _move$version_group_d2 === void 0 ? void 0 : _move$version_group_d2.move_learn_method.name\n      };\n    }).sort((a, b) => a.level - b.level);\n  };\n\n  // Modify your searchPokemon function to include all moves data\n  const searchPokemon = async () => {\n    try {\n      setError('');\n      const response = await axios.get(`https://pokeapi.co/api/v2/pokemon/${search.toLowerCase()}`);\n      const speciesResponse = await axios.get(response.data.species.url);\n      const evolutionResponse = await axios.get(speciesResponse.data.evolution_chain.url);\n      const getEvolutionDetails = chain => {\n        const evolutions = [];\n        let current = chain;\n        while (current) {\n          var _current$evolution_de;\n          evolutions.push({\n            name: current.species.name,\n            min_level: ((_current$evolution_de = current.evolution_details[0]) === null || _current$evolution_de === void 0 ? void 0 : _current$evolution_de.min_level) || null\n          });\n          current = current.evolves_to[0];\n        }\n        return evolutions;\n      };\n      const pokemon = {\n        id: response.data.id,\n        name: response.data.name,\n        types: response.data.types.map(type => type.type.name),\n        stats: response.data.stats.map(stat => ({\n          name: stat.stat.name,\n          value: stat.base_stat\n        })),\n        moves: response.data.moves.map(move => {\n          var _move$version_group_d3;\n          return {\n            name: move.move.name,\n            level: ((_move$version_group_d3 = move.version_group_details[0]) === null || _move$version_group_d3 === void 0 ? void 0 : _move$version_group_d3.level_learned_at) || 1\n          };\n        }).sort((a, b) => a.level - b.level),\n        image: response.data.sprites.other['official-artwork'].front_default,\n        height: response.data.height / 10,\n        weight: response.data.weight / 10,\n        evolutions: getEvolutionDetails(evolutionResponse.data.chain)\n      };\n      setPokemon(pokemon);\n    } catch (err) {\n      setError('Pokemon not found');\n      setPokemon(null);\n    }\n  };\n\n  // Replace your existing moves section in the return statement with this:\n  return /*#__PURE__*/_jsxDEV(PokedexContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        color: '#333'\n      },\n      children: \"Pok\\xE9dex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: search,\n        onChange: e => setSearch(e.target.value),\n        placeholder: \"Enter Pokemon name or number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: searchPokemon,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }, this), pokemon && /*#__PURE__*/_jsxDEV(PokemonCard, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: pokemon.image,\n          alt: pokemon.name,\n          style: {\n            width: '300px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: '#333'\n          },\n          children: [\"#\", pokemon.id.toString().padStart(3, '0'), \" \", pokemon.name.charAt(0).toUpperCase() + pokemon.name.slice(1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Types:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '10px',\n          marginBottom: '20px'\n        },\n        children: pokemon.types.map(type => /*#__PURE__*/_jsxDEV(TypeBadge, {\n          type: type,\n          children: type\n        }, type, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Stats:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this), pokemon.stats.map(stat => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              textTransform: 'capitalize'\n            },\n            children: stat.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: stat.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(StatBar, {\n          value: stat.value,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-fill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 15\n        }, this)]\n      }, stat.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Evolution Chain:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '20px',\n          alignItems: 'center',\n          marginBottom: '20px'\n        },\n        children: pokemon.evolutions.map((evo, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textTransform: 'capitalize'\n              },\n              children: evo.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 19\n            }, this), evo.min_level && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Level \", evo.min_level]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 17\n          }, this), index < pokemon.evolutions.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 19\n          }, this)]\n        }, evo.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MovesSection, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Moves:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(GenerationSelect, {\n          value: selectedGeneration,\n          onChange: e => setSelectedGeneration(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"Generation I\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2\",\n            children: \"Generation II\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"3\",\n            children: \"Generation III\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"4\",\n            children: \"Generation IV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"5\",\n            children: \"Generation V\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"6\",\n            children: \"Generation VI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"7\",\n            children: \"Generation VII\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"8\",\n            children: \"Generation VIII\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MovesList, {\n          children: getGenerationMoves(pokemon.allMoves, selectedGeneration).map(move => /*#__PURE__*/_jsxDEV(MoveCard, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontWeight: 'bold',\n                textTransform: 'capitalize'\n              },\n              children: move.name.replace('-', ' ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '14px',\n                color: '#666'\n              },\n              children: move.method === 'level-up' ? `Learn at Level ${move.level}` : `Learn by ${move.method.replace('-', ' ')}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 19\n            }, this)]\n          }, move.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n};\n_s(Pokedex, \"13oRV0C8UB943Qf++wBn96Fv8uc=\");\n_c10 = Pokedex;\nexport default Pokedex;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"PokedexContainer\");\n$RefreshReg$(_c2, \"SearchBar\");\n$RefreshReg$(_c3, \"PokemonCard\");\n$RefreshReg$(_c4, \"TypeBadge\");\n$RefreshReg$(_c5, \"StatBar\");\n$RefreshReg$(_c6, \"MovesSection\");\n$RefreshReg$(_c7, \"GenerationSelect\");\n$RefreshReg$(_c8, \"MovesList\");\n$RefreshReg$(_c9, \"MoveCard\");\n$RefreshReg$(_c10, \"Pokedex\");","map":{"version":3,"names":["React","useState","axios","styled","jsxDEV","_jsxDEV","PokedexContainer","div","_c","SearchBar","_c2","PokemonCard","_c3","TypeBadge","span","props","getTypeColor","type","_c4","StatBar","value","_c5","colors","normal","fire","water","electric","grass","ice","fighting","poison","ground","flying","psychic","bug","rock","ghost","dragon","dark","steel","fairy","MovesSection","_c6","GenerationSelect","select","_c7","MovesList","_c8","MoveCard","_c9","Pokedex","_s","pokemon","setPokemon","search","setSearch","error","setError","selectedGeneration","setSelectedGeneration","getGenerationMoves","moves","generation","filter","move","versionGroup","version_group_details","find","detail","version_group","name","undefined","map","_move$version_group_d","_move$version_group_d2","level","level_learned_at","method","move_learn_method","sort","a","b","searchPokemon","response","get","toLowerCase","speciesResponse","data","species","url","evolutionResponse","evolution_chain","getEvolutionDetails","chain","evolutions","current","_current$evolution_de","push","min_level","evolution_details","evolves_to","id","types","stats","stat","base_stat","_move$version_group_d3","image","sprites","other","front_default","height","weight","err","children","style","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","placeholder","onClick","src","alt","width","toString","padStart","charAt","toUpperCase","slice","display","gap","marginBottom","justifyContent","textTransform","className","alignItems","evo","index","Fragment","length","allMoves","fontWeight","replace","fontSize","_c10","$RefreshReg$"],"sources":["C:/Users/marti/Documents/programacion/pokeapi/src/components/Pokedex.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\n\r\nconst PokedexContainer = styled.div`\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  font-family: 'Roboto', sans-serif;\r\n`;\r\n\r\nconst SearchBar = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-bottom: 20px;\r\n  input {\r\n    padding: 10px;\r\n    border-radius: 20px;\r\n    border: 2px solid #e0e0e0;\r\n    width: 300px;\r\n    font-size: 16px;\r\n    &:focus {\r\n      outline: none;\r\n      border-color: #3f51b5;\r\n    }\r\n  }\r\n  button {\r\n    padding: 10px 20px;\r\n    border-radius: 20px;\r\n    border: none;\r\n    background: #3f51b5;\r\n    color: white;\r\n    cursor: pointer;\r\n    &:hover {\r\n      background: #303f9f;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PokemonCard = styled.div`\r\n  background: white;\r\n  border-radius: 20px;\r\n  padding: 30px;\r\n  box-shadow: 0 4px 20px rgba(0,0,0,0.1);\r\n`;\r\n\r\nconst TypeBadge = styled.span`\r\n  padding: 5px 15px;\r\n  border-radius: 15px;\r\n  margin: 0 5px;\r\n  color: white;\r\n  font-weight: bold;\r\n  text-transform: capitalize;\r\n  background-color: ${props => getTypeColor(props.type)};\r\n`;\r\n\r\nconst StatBar = styled.div`\r\n  width: 100%;\r\n  height: 20px;\r\n  background: #f0f0f0;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  margin: 5px 0;\r\n  .stat-fill {\r\n    height: 100%;\r\n    background: #3f51b5;\r\n    width: ${props => (props.value / 255) * 100}%;\r\n    transition: width 0.3s ease;\r\n  }\r\n`;\r\n\r\n// Add this function to get colors for different Pokemon types\r\nfunction getTypeColor(type) {\r\n  const colors = {\r\n    normal: '#A8A878',\r\n    fire: '#F08030',\r\n    water: '#6890F0',\r\n    electric: '#F8D030',\r\n    grass: '#78C850',\r\n    ice: '#98D8D8',\r\n    fighting: '#C03028',\r\n    poison: '#A040A0',\r\n    ground: '#E0C068',\r\n    flying: '#A890F0',\r\n    psychic: '#F85888',\r\n    bug: '#A8B820',\r\n    rock: '#B8A038',\r\n    ghost: '#705898',\r\n    dragon: '#7038F8',\r\n    dark: '#705848',\r\n    steel: '#B8B8D0',\r\n    fairy: '#EE99AC'\r\n  };\r\n  return colors[type] || '#777';\r\n}\r\n\r\n// Add these new styled components after your existing ones\r\nconst MovesSection = styled.div`\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst GenerationSelect = styled.select`\r\n  padding: 8px;\r\n  border-radius: 10px;\r\n  border: 2px solid #e0e0e0;\r\n  margin-bottom: 15px;\r\n  cursor: pointer;\r\n  &:focus {\r\n    outline: none;\r\n    border-color: #3f51b5;\r\n  }\r\n`;\r\n\r\nconst MovesList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n  gap: 10px;\r\n`;\r\n\r\nconst MoveCard = styled.div`\r\n  background: #f5f5f5;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n`;\r\n\r\nconst Pokedex = () => {\r\n  const [pokemon, setPokemon] = useState(null);\r\n  const [search, setSearch] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [selectedGeneration, setSelectedGeneration] = useState('1');\r\n  \r\n  // Add this after your existing searchPokemon function\r\n  const getGenerationMoves = (moves, generation) => {\r\n    return moves.filter(move => {\r\n      const versionGroup = move.version_group_details.find(detail => {\r\n        switch(generation) {\r\n          case '1': return detail.version_group.name === 'red-blue';\r\n          case '2': return detail.version_group.name === 'gold-silver';\r\n          case '3': return detail.version_group.name === 'ruby-sapphire';\r\n          case '4': return detail.version_group.name === 'diamond-pearl';\r\n          case '5': return detail.version_group.name === 'black-white';\r\n          case '6': return detail.version_group.name === 'x-y';\r\n          case '7': return detail.version_group.name === 'sun-moon';\r\n          case '8': return detail.version_group.name === 'sword-shield';\r\n          default: return false;\r\n        }\r\n      });\r\n      return versionGroup !== undefined;\r\n    }).map(move => ({\r\n      name: move.move.name,\r\n      level: move.version_group_details[0]?.level_learned_at || 1,\r\n      method: move.version_group_details[0]?.move_learn_method.name\r\n    })).sort((a, b) => a.level - b.level);\r\n  };\r\n\r\n  // Modify your searchPokemon function to include all moves data\r\n  const searchPokemon = async () => {\r\n    try {\r\n      setError('');\r\n      const response = await axios.get(`https://pokeapi.co/api/v2/pokemon/${search.toLowerCase()}`);\r\n      const speciesResponse = await axios.get(response.data.species.url);\r\n      const evolutionResponse = await axios.get(speciesResponse.data.evolution_chain.url);\r\n      \r\n      const getEvolutionDetails = (chain) => {\r\n        const evolutions = [];\r\n        let current = chain;\r\n        \r\n        while (current) {\r\n          evolutions.push({\r\n            name: current.species.name,\r\n            min_level: current.evolution_details[0]?.min_level || null\r\n          });\r\n          current = current.evolves_to[0];\r\n        }\r\n        return evolutions;\r\n      };\r\n\r\n      const pokemon = {\r\n        id: response.data.id,\r\n        name: response.data.name,\r\n        types: response.data.types.map(type => type.type.name),\r\n        stats: response.data.stats.map(stat => ({\r\n          name: stat.stat.name,\r\n          value: stat.base_stat\r\n        })),\r\n        moves: response.data.moves.map(move => ({\r\n          name: move.move.name,\r\n          level: move.version_group_details[0]?.level_learned_at || 1\r\n        })).sort((a, b) => a.level - b.level),\r\n        image: response.data.sprites.other['official-artwork'].front_default,\r\n        height: response.data.height / 10,\r\n        weight: response.data.weight / 10,\r\n        evolutions: getEvolutionDetails(evolutionResponse.data.chain)\r\n      };\r\n      setPokemon(pokemon);\r\n    } catch (err) {\r\n      setError('Pokemon not found');\r\n      setPokemon(null);\r\n    }\r\n  };\r\n\r\n  // Replace your existing moves section in the return statement with this:\r\n  return (\r\n    <PokedexContainer>\r\n      <h1 style={{ textAlign: 'center', color: '#333' }}>Pokédex</h1>\r\n      <SearchBar>\r\n        <input\r\n          type=\"text\"\r\n          value={search}\r\n          onChange={(e) => setSearch(e.target.value)}\r\n          placeholder=\"Enter Pokemon name or number\"\r\n        />\r\n        <button onClick={searchPokemon}>Search</button>\r\n      </SearchBar>\r\n\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n      {pokemon && (\r\n        <PokemonCard>\r\n          <div style={{ textAlign: 'center' }}>\r\n            <img src={pokemon.image} alt={pokemon.name} style={{ width: '300px' }} />\r\n            <h2 style={{ color: '#333' }}>\r\n              #{pokemon.id.toString().padStart(3, '0')} {pokemon.name.charAt(0).toUpperCase() + pokemon.name.slice(1)}\r\n            </h2>\r\n          </div>\r\n          \r\n          <h3>Types:</h3>\r\n          <div style={{ display: 'flex', gap: '10px', marginBottom: '20px' }}>\r\n            {pokemon.types.map(type => (\r\n              <TypeBadge key={type} type={type}>{type}</TypeBadge>\r\n            ))}\r\n          </div>\r\n\r\n          <h3>Stats:</h3>\r\n          {pokemon.stats.map(stat => (\r\n            <div key={stat.name} style={{ marginBottom: '10px' }}>\r\n              <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                <span style={{ textTransform: 'capitalize' }}>{stat.name}</span>\r\n                <span>{stat.value}</span>\r\n              </div>\r\n              <StatBar value={stat.value}>\r\n                <div className=\"stat-fill\" />\r\n              </StatBar>\r\n            </div>\r\n          ))}\r\n\r\n          <h3>Evolution Chain:</h3>\r\n          <div style={{ display: 'flex', gap: '20px', alignItems: 'center', marginBottom: '20px' }}>\r\n            {pokemon.evolutions.map((evo, index) => (\r\n              <React.Fragment key={evo.name}>\r\n                <div style={{ textAlign: 'center' }}>\r\n                  <div style={{ textTransform: 'capitalize' }}>{evo.name}</div>\r\n                  {evo.min_level && <div>Level {evo.min_level}</div>}\r\n                </div>\r\n                {index < pokemon.evolutions.length - 1 && (\r\n                  <div>→</div>\r\n                )}\r\n              </React.Fragment>\r\n            ))}\r\n          </div>\r\n\r\n          <MovesSection>\r\n            <h3>Moves:</h3>\r\n            <GenerationSelect \r\n              value={selectedGeneration}\r\n              onChange={(e) => setSelectedGeneration(e.target.value)}\r\n            >\r\n              <option value=\"1\">Generation I</option>\r\n              <option value=\"2\">Generation II</option>\r\n              <option value=\"3\">Generation III</option>\r\n              <option value=\"4\">Generation IV</option>\r\n              <option value=\"5\">Generation V</option>\r\n              <option value=\"6\">Generation VI</option>\r\n              <option value=\"7\">Generation VII</option>\r\n              <option value=\"8\">Generation VIII</option>\r\n            </GenerationSelect>\r\n\r\n            <MovesList>\r\n              {getGenerationMoves(pokemon.allMoves, selectedGeneration).map(move => (\r\n                <MoveCard key={move.name}>\r\n                  <div style={{ fontWeight: 'bold', textTransform: 'capitalize' }}>\r\n                    {move.name.replace('-', ' ')}\r\n                  </div>\r\n                  <div style={{ fontSize: '14px', color: '#666' }}>\r\n                    {move.method === 'level-up' \r\n                      ? `Learn at Level ${move.level}` \r\n                      : `Learn by ${move.method.replace('-', ' ')}`}\r\n                  </div>\r\n                </MoveCard>\r\n              ))}\r\n            </MovesList>\r\n          </MovesSection>\r\n        </PokemonCard>\r\n      )}\r\n    </PokedexContainer>\r\n  );\r\n};\r\n\r\nexport default Pokedex;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}